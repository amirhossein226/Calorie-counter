"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""


from pathlib import Path
import os
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lhpf0=q+%7f=7vdrd0ywr+)^*8hxq^pun33&tf#iix@kp%31h8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.sites',
    # my counter app is here.
    'accounts.apps.AccountsConfig',
    'content.apps.ContentConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # and additional apps installed here.
    'captcha',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'rest_framework',
    # apps related to working with sass files
    "compressor",
]

MIDDLEWARE = [

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    # setting the allauth middleware

    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'project.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["templates/"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    # },
    # {
    #     'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"

# adding the CompressorFinder to for work with sass
STATICFILES_FINDERS = ('django.contrib.staticfiles.finders.FileSystemFinder',
                       'django.contrib.staticfiles.finders.AppDirectoriesFinder',
                       # The compressor.finders.CompressorFinder is a finder that is provided by the
                       # django-compressor package1. It is used to locate and compress static files
                       # that are processed by COMPRESS_PRECOMPILERS2.
                       'compressor.finders.CompressorFinder',
                       )
COMPRESS_PRECOMPILERS = (
    ('text/x-scss', 'django_libsass.SassCompiler'),
)
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

# set the Customized User model
AUTH_USER_MODEL = "accounts.User"
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# add the customized authenticate method
AUTHENTICATION_BACKENDS = [
    # customized authentication based on email
    "accounts.backends.EmailBackend",
    "django.contrib.auth.backends.ModelBackend",
    # add the allauth authenticationbackend
    'allauth.account.auth_backends.AuthenticationBackend',
]

# setting related to providers
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        "SCOPE": [
            'profile',
            'email',
        ],
        "AUTH_PARMS": {
            'access_type': 'online',
        },
        # If the user already have an local account in database
        #  and then try to login with the google account,this causes
        #  the user to be treated like a user who have a
        #  social account in database.
        "EMAIL_AUTHENTICATION": True,

    }
}

SITE_ID = 3
SOCIALACCOUNT_LOGOUT_ON_GET = True


'''# 
changing the default SocialAccountProvider to update the user's
Profile information every time he/she login with social account.
#'''
SOCIALACCOUNT_ADAPTER = "accounts.adapter.CustomSocialAccountAdapter"


'''# 
I define the below setting to create the social account in which case
the user before of this created a local account in the site and this time he/she 
want to login with google account.for more information you can go to 
https://docs.allauth.org/en/latest/socialaccount/configuration.html 
# '''
SOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT = True
SOCIALACCOUNT_EMAIL_VERIFICATION = "email"
SOCIALACCOUNT_EMAIL_REQUIRED = True

# implement the smtp email backend for sending email to user
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "amirsardari226@gmail.com"
EMAIL_HOST_PASSWORD = "yegj yqbv lojs mnpl"
DEFAULT_FROM_EMAIL = "amirsardari226@gmail.com"

# settings related to reCHATCHA
load_dotenv()
RECAPTCHA_PUBLIC_KEY = os.environ["RECAPTCHA_PUBLIC_KEY"]
RECAPTCHA_PRIVATE_KEY = os.environ["RECAPTCHA_PRIVATE_KEY"]
RECAPTCHA_REQUIRED_SCORE = 0.5
